language: php

php:
  - 5.4
  - 5.5
  - 5.6

env:
  - DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=1.3.1
  - DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=latest

matrix:
  fast_finish: true
  include:
    - php: 5.6
      env: DELIMIDENT=y DOWNLOAD_VERSION=1210FC6de PDO_VERSION=1.3.1
    - php: 5.6
      env: DELIMIDENT=n DOWNLOAD_VERSION=1170FC8de PDO_VERSION=1.3.1
    - php: 5.6
      env: DELIMIDENT=n DOWNLOAD_VERSION=1150fc9de PDO_VERSION=1.3.1
    - php: 7.0
      env: DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=1.3.2
    - php: 7.0
      env: DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=latest
    - php: nightly
      env: DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=latest
  allow_failures:
    - php: 
      - 7.0
      - nightly
    - env: DELIMIDENT=n DOWNLOAD_VERSION=1210FC6de PDO_VERSION=latest

sudo: true

# cache composer dirs
cache:
  directories:
    - $HOME/.composer/cache
    - $HOME/download

before_install:
  # Parallel download
  - sudo apt-get update -qq 
  - sudo apt-get install aria2 curl -y

  # INSTALL
  - DOWNLOAD_FILE=iif.${DOWNLOAD_VERSION}.linux-x86_64.tar
  # Retrieves and extracts the Informix binaries
  - if [ ! -d $HOME/download ]; then mkdir $HOME/download; fi
  - if [ ! -f $HOME/download/${DOWNLOAD_FILE} ]; then travis_retry export DOWNLOAD_LINK=$(phantomjs --ssl-protocol=tlsv1 ${TRAVIS_BUILD_DIR}/tests/ci/travis/download.js | tail -1 | grep http); fi
  - if [ ! -f $HOME/download/${DOWNLOAD_FILE} ]; then travis_retry aria2c -x 16 -d $HOME/download -o ${DOWNLOAD_FILE} ${DOWNLOAD_LINK}; fi
  - cp $HOME/download/${DOWNLOAD_FILE} /tmp
  - cd /tmp
  - sudo chmod +x ${TRAVIS_BUILD_DIR}/tests/ci/travis/*.sh
  # Install Informix Database
  - sudo ${TRAVIS_BUILD_DIR}/tests/ci/travis/informix_install.sh ${DOWNLOAD_FILE}
  # Start and create Informix Database
  - sudo ${TRAVIS_BUILD_DIR}/tests/ci/travis/informix_start.sh
  - export INFORMIXDIR=/opt/IBM/informix

  # Install pdo_informix
  - mkdir pdo_informix
  - if [ $PDO_VERSION = 'latest' ]; then export PDO_LINK="https://pecl.php.net/get/PDO_INFORMIX"; else export PDO_LINK="https://pecl.php.net/get/PDO_INFORMIX-${PDO_VERSION}.tgz"; fi
  - (cd pdo_informix/; wget $PDO_LINK -O pdo_informix.tgz && tar -xvf pdo_informix.tgz --strip 1)
  - (cd pdo_informix/; phpize && ./configure --with-pdo-informix=${INFORMIXDIR} && make && sudo make install)

install:
  - cd ${TRAVIS_BUILD_DIR}
  # enabling pdo_ibm
  - echo "extension=pdo_informix.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - php -m | grep -i pdo
  - php -r "echo phpversion('pdo_informixp');"

  # preparing Yii2 environment
  - travis_retry composer self-update && composer --version
  - travis_retry composer global require "fxp/composer-asset-plugin:~1.1.3" --prefer-dist --no-interaction
  - export PATH="$HOME/.composer/vendor/bin:$PATH"

  # installing composer dependency
  - travis_retry composer install --prefer-dist --no-interaction
  # needed to use tests of Yii2
  - rm vendor/yiisoft/yii2-dev -Rf
  - travis_retry composer install --prefer-source -o --no-interaction

  - sed -i "s/DELIMIDENT=\w/DELIMIDENT=${DELIMIDENT}/g" tests/data/config.php

before_script:
  - |
    if [ $TRAVIS_PHP_VERSION = '5.6' ] && [ $DELIMIDENT = 'n' ] && [ $DOWNLOAD_VERSION = '1210FC6de' ]; then
      PHPUNIT_FLAGS="--coverage-clover=coverage.clover"
    fi

script:
  - vendor/bin/phpunit --verbose $PHPUNIT_FLAGS

after_script:
  - |
    if [ $TRAVIS_PHP_VERSION = '5.6' ] && [ $DELIMIDENT = 'n' ] && [ $DOWNLOAD_VERSION = '1210FC6de' ] && [ $PDO_VERSION = '1.3.1' ]; then
      travis_retry wget https://scrutinizer-ci.com/ocular.phar
      php ocular.phar code-coverage:upload --format=php-clover coverage.clover
    fi
